plugins {
    id 'java'
    id 'info.solidsoft.pitest' version '1.5.1'
    id 'jacoco'
}

project.group 'api.tilmais.com'
project.version '0.0.0'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'jakarta.validation:jakarta.validation-api:3.0.0'
    implementation 'org.hibernate.validator:hibernate-validator:7.0.1.Final'
    implementation 'org.glassfish:jakarta.el:4.0.1'

    testImplementation 'com.github.javafaker:javafaker:1.0.2'
    testImplementation 'org.mockito:mockito-core:3.12.4'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.12.4'
    testImplementation 'org.assertj:assertj-core:3.20.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

pitest {
    junit5PluginVersion = '0.12'
    outputFormats = ['XML', 'HTML']
    timestampedReports = false
    threads = 6
    excludedClasses = ['com.tilmais.api.domain.entities.valueobjects.*']
}

test {
    useJUnitPlatform()
    finalizedBy = [jacocoTestReport, jacocoTestCoverageVerification]
}

jacocoTestReport {
    dependsOn = [test]
    reports {
        csv.required = false
        xml.required = true
        html.required = true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "com/tilmais/api/domain/entities/valueobjects/**"
            ])
        }))
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 1.00
            }
        }
    }
}

build {
    dependsOn test
}
